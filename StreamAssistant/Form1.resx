<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label2.Text" xml:space="preserve">
    <value>Distance Traveled: 
   ###### m
Accuracy: 
   ####/#### (##.##%)
Explosives Used: 
   ### kg
Kills: 
   ### by player
   ## by others
   ### Total
Property Damage: 
   $#######.00
Criminal Rating: 
   ####
Percentage Completed: 
   ##.##</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAQAAEABADoAgAAJgAAABAQAAABACAAaAQAAA4DAAAoAAAAIAAAAEAAAAABAAQAAAAAAAAC
        AAAAAAAAAAAAABAAAAAAAAAAAAAAAP+UAABAQEAAf7L/AAAzfwA/P38AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABERERERERERERERERERAAAREREREREREREREREREQAAERERERE
        REREREREREREAABERERERERERERERERERAAAREREREREREREREREREQAAEREREREREREREREREREAABE
        RERERERERERERERERAAAREREREREREREREREREQAAEREREREREREREREREREAAAAAAAAAAAAAAAAAAAA
        AAAAAAABEREREQAAIiIiIAAAAAAAAREREREAAAACAAAAAAAAAAERERERAAAAAgAAAAAAAAABEREREQAA
        AAIAAAAAAAAAAREREREAIiICAiIAAAAAAAERERERACIAAAACAAAAAAABEREREQAiIiIiIgAAAAAAARER
        EREAIiIiIiIAAAAAAAAREREQACIiIiIiAAAAAAAAARERAAAiIiIiIgAAAAAAAAAREAAAIiIiIiIAAAAA
        AAAAMzAAACIiIiIiAAAAAAUAAzMzAAAAAAAAAAAAAAAFADMzMzAAAAAAAAAAAAAABVAzMzMwAAAAAAAA
        AAAAAABQAzMzMAAAAAAAAAAAAAAAAFAzMzAAAAAAAAAAAAAAAABQMzMwAAAAAAAAAAAAAAAAUAAAAAAA
        AAAAAAAAAAAAAFVVVVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAYAA
        AAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAfwAYA/8AGAP/AB8f/wAAAf8AAAH/AAAB/wA
        AAf8AAAH/gCAB/8BgAf/g4AH+4OAB/EBgAfwAP//8AD///AA///8AP///gD///4A///+AP///wH/////
        //8oAAAAEAAAACAAAAABACAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAUNhgAsb/8ANIP7ADJ+/wAz
        f/8AM3//ADN//wAzf/8AM3//ADN//wAzf/8AM3//ADJ+/wA0g/sALG//AAUNhgAFDYYALG//ADSD+wAy
        fv8AM3//ADN//wAzf/8AM3//ADN//wAzf/8AM3//ADN//wAyfv8ANIP7ACxv/wAFDYYABQ2GACtt/wAz
        gfoAMnz+ATJ8/wAyfP4AMnz+ADJ8/wAyfP4AMnz+ADJ8/wAyfP4AMnz/ADOB+wArbf8ABQ2GAAUOhgAv
        dv8AOIz7ADWI/wA0if8ANIn/ADSJ/wA1if4ANoj/ADaI/gA1h/4ANYf/ADSG/gA4jfoAL3b/AAUOhgAC
        B38AFzr/ABtF7gYdP/4OIj//DSE//g0hP/4MID//ABpA+QAaQPkIIUX/Bh9F/gghRv8EHkT7ABY5/wAD
        B34AAAAIZzoACgAAABp/RwDy/5AA/+yFAP75jAD60HUA/x0QAG0AAANYGRQN9CsmIPsjHxjxDwwIzQAA
        ABQbFxAEAAAAAAAAAAAAAAINhlAC8P+gAv/6lAL+/5sC/OeIAv8SDAO7AAYOdwAAAZUeHh//Dg8QxQIE
        B40BAwY/AAAAAAAAAAEAAAAAAAAADoVPAO//nAD/+ZAA/v+VAP/tiwD8EAsD/jAyNP8fHh7+ERER/xQU
        FPomJib/CQkJfgAAAAAAAAAAAAAAAAAABA56SADs/6AA//iRBf3/mgP/44cA/Q0IA/Y6PD37Ozs6+zk5
        Of87Ozv4NTU1/wgICHsAAAAAAAAAAEQnAAIAAAAADQkCSrZqAvr/mAD97IcA/3ZFAaAAAAaBPDs6/0ZG
        RvZDQ0P6RkZG9To6Ov8GBgZ7AAAAAAUFCwEAAAAABwYJQwAAAAMeGROGtZp5/29eSvUAAAAEDAsKeTAw
        MP85OTn6Nzc3/zk5OfowMDD/BgYGfQAAAAAAAAAAAAAAChsbOPQODRnCZY/K5ne4//9wp+//N0lnqAAA
        AD4ICQuJBwcHfQYGBn8HBwd9BgYGigAAAD4AAAAAAAAAAAAAAA0XFy/lGxo2/1uBtv6Huf/9jML//0hl
        hvEAAAANAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAgsBAAAACAkGErgbHDf/bJvZ94C0
        //48VXnuAAAAEP///wEKCgoFDAwMBA0NDQQLCwsFAQEBAgAAAAAAAAAADAwYBAAAAAAMDBh3IyRI/x0g
        PPkiJUb/ERIj6QAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwwM
        GIEODByGDQsakAwKGEkAAAAAEA4hAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACAAQAA4MMAAOBDAADgAwAA4AMAAPADAADxgwAAwLsAAMD/AADg/wAA8P8AAPH/AAA=
</value>
  </data>
</root>